    @using FormularioVentas.Client.Services.Empleado
    @using FormularioVentas.Entities.Representante
    @inject NavigationManager NavigationManager;
    @inject RegistroVentasService registroVentasService;
    @inject SucursalesService sucursalesService;
    <h2>@Titulo</h2>

    <EditForm Model="@representante" OnValidSubmit="@Guardar">
        <DataAnnotationsValidator />

        <div class="row">
            <div class="col-md-6">
                <div class="mt-3">
                    <label>Número de Empleado</label>
                    <InputNumber readonly class="form-control" @bind-Value="representante.Num_Empl" />
                    <ValidationMessage For="(() => representante.Num_Empl)" />
                </div>

                <div class="mt-3">
                    <label>Nombre Completo</label>
                    <InputText class="form-control" @bind-Value="representante.Nombre" />
                    <ValidationMessage For="(() => representante.Nombre)" />
                </div>

                <div class="mt-3">
                    <div>
                        <label>Edad</label>
                        <InputNumber class="form-control" @bind-Value="representante.Edad" />
                        <ValidationMessage For="(() => representante.Edad)" />
                    </div>

                </div>

                <div class="mt-3">
                    <label>Cargo</label>
                    <InputText class="form-control" @bind-Value="representante.Cargo" />
                    <ValidationMessage For="(() => representante.Cargo)" />
                </div>

                <div class="mt-3">
                    <label>Fecha de Contrato</label>
                    <InputDate class="form-control" @bind-Value="representante.Fecha_Contrato" />
                    <ValidationMessage For="(() => representante.Fecha_Contrato)" />
                </div>
                <div style="margin:20px 5px">
                    <button class="btn btn-danger" @onclick="regresar">Regresar</button>
                </div>
            </div>

            <div class="col-md-6">
                <div class="mt-3">
                    <label>Seleccione Sucursal</label>
                    <InputSelect class="form-control" @bind-Value="representante.idSucursal">
                        <option value="0">--Seleccione--</option>
                        @foreach(var item in listaSucursales)
                        {
                            <option value="@item.idSucursal">@item.nombreSucursal</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="(()=>representante.idSucursal)"/>
                </div>
                <div class="mt-3">
                    <label>Seleccione Gerente</label>
                    <InputSelect class="form-control" @bind-Value="representante.nombreGerente">
                        <option value="">--Seleccione--</option>
                        @foreach (var item in nombresGerentes)
                        {
                            <option value="@item.Nombre">@item.Nombre</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="(() => representante.nombreGerente)" />
                </div>
                <div class="mt-3">
                    <label>Cuota</label>
                    <InputNumber class="form-control" @bind-Value="representante.Cuota" />
                    <ValidationMessage For="(() => representante.Cuota)" />
                </div>

                <div class="mt-3">
                    <label>Ventas</label>
                    <InputNumber class="form-control" @bind-Value="representante.Ventas" />
                    <ValidationMessage For="(() => representante.Ventas)" />
                </div>
                <div class="mt-3">
                    <button type="submit" class="btn btn-primary">Guardar</button>
                    <button class="btn btn-danger" @onclick="regresar">Cancelar</button>
                </div>
            </div>
        
        </div>
    </EditForm>

    @code {
        public RepresentanteVentas representante { get; set; } = new RepresentanteVentas();

        [Parameter]
        public int Num_Empl { get; set; }

        public string Titulo { get; set; } = " ";

        public List<SucursalVenta> listaSucursales { get; set; } = new List<SucursalVenta>();
        public List<ListaRepresentante> nombresGerentes { get; set; } = new List<ListaRepresentante>();

        protected override Task OnInitializedAsync()
        {
            listaSucursales = sucursalesService.ListarSucursales();
            nombresGerentes = registroVentasService.ListarGerentes();

            if (Num_Empl == 0) Titulo = "Agregar Registro";
            else{
                Titulo = "Editar Registro";
                representante = registroVentasService.RecuperarId(Num_Empl);
            }
            return base.OnInitializedAsync();
        }

        private void Guardar()
        {
  
                registroVentasService.GuardarRegistro(representante);
                NavigationManager.NavigateTo("/RegistroVentas/tabla");
        }
        private void regresar()
        {
            NavigationManager.NavigateTo("/RegistroVentas/tabla");
        }
    }